{
  "name": "Video generator with AI",
  "nodes": [
    {
      "parameters": {
        "jsCode": "function findSceneEntries(obj) {\n  const scenes = [];\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (key.toLowerCase().startsWith(\"scene\") && typeof value === \"string\") {\n      scenes.push(value);\n    } else if (typeof value === \"object\" && value !== null) {\n      scenes.push(...findSceneEntries(value));\n    }\n  }\n\n  return scenes;\n}\n\nlet output = [];\n\ntry {\n  const inputData = items[0].json;\n  const scenes = findSceneEntries(inputData);\n\n  if (scenes.length === 0) {\n    throw new Error(\"No scene keys found at any level.\");\n  }\n\n  output = scenes.map(scene => ({ description: scene }));\n} catch (e) {\n  throw new Error(\"Could not extract scenes properly. Details: \" + e.message);\n}\n\nreturn output;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        340
      ],
      "id": "e1e871eb-ddb3-4e8c-8595-573928285455",
      "name": "Unbundle Prompts"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://queue.fal.run/fal-ai/mmaudio-v2 ",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "= {\n        \"prompt\": \"{{ $('Prompts AI Agent').item.json.output.Sound }}\",\n        \"duration\": 5,\n        \"video_url\": \"{{ $json.data.outputs[0] }}\"\n  }\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        200,
        580
      ],
      "id": "9822110f-5fa2-41da-9110-3eb59529a60f",
      "name": "Create Sounds",
      "credentials": {
        "httpHeaderAuth": {
          "id": "2utimBAtzlPOhXtv",
          "name": "Wave Speed AI"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://queue.fal.run/fal-ai/mmaudio-v2/requests/{{ $json.request_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        660,
        580
      ],
      "id": "b382fd26-944f-4415-af8e-a80cc1251a5e",
      "name": "Get Sounds",
      "alwaysOutputData": false,
      "retryOnFail": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "2utimBAtzlPOhXtv",
          "name": "Wave Speed AI"
        }
      }
    },
    {
      "parameters": {
        "amount": 90
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        440,
        580
      ],
      "id": "43efc4a8-cde3-4652-a3f9-af1ce4a74873",
      "name": "Wait for Sounds",
      "webhookId": "e8f621a2-912d-43ad-ac67-0f135a441870"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    video_urls: items.map(item => item.json.video.url)\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        840
      ],
      "id": "58f408cd-591a-4a69-946c-24e07a7a2983",
      "name": "List Elements"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://queue.fal.run/fal-ai/ffmpeg-api/compose",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"tracks\": [\n    {\n      \"id\": \"1\",\n      \"type\": \"video\",\n      \"keyframes\": [\n        { \"url\": \"{{ $json.video_urls[0] }}\", \"timestamp\": 0, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[1] }}\", \"timestamp\": 5, \"duration\": 5 },\n        { \"url\": \"{{ $json.video_urls[2] }}\", \"timestamp\": 10, \"duration\": 5 }\n      ]\n    }\n  ]\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        200,
        840
      ],
      "id": "4283f526-670c-4cda-9da9-e38432b8bf26",
      "name": "Sequence Video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "2utimBAtzlPOhXtv",
          "name": "Wave Speed AI"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://queue.fal.run/fal-ai/ffmpeg-api/requests/{{ $json.request_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        680,
        840
      ],
      "id": "44b4c0fd-c83c-4969-8b95-8f8fc6de9bbc",
      "name": "Get Final Video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "2utimBAtzlPOhXtv",
          "name": "Wave Speed AI"
        }
      }
    },
    {
      "parameters": {
        "amount": 60
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        440,
        840
      ],
      "id": "949af277-acba-4bab-946f-7ae3e377c3b5",
      "name": "Wait for Final Video",
      "webhookId": "4d45095b-ac57-450c-a05c-0fba53294131"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        480,
        140
      ],
      "id": "dfb2f398-1889-4f86-b26e-9fc630b318c8",
      "name": "Think"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Give me 3 video prompts based on the previous idea\n\nUse the Think tool to review your output",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=\n**Role**: You are a Lego stop-motion director. Your task is to take a single theme and generate THREE different visual interpretations of it, showing how it affects different Lego characters. Each scene must be a stand-alone clip.\n\n**Your writing must follow this style**:\n- Generate ONLY the visual descriptions for the scenes.\n- Each scene must focus on clear, simple actions and reactions.\n- Emphasize the blocky, plastic aesthetic of the Lego world.\n- Use cinematic language (e.g., close-up, wide shot).\n- **CRUCIAL: The visual action in each scene MUST create a clear opportunity for the specified 'Sound' to occur.**\n\n**Inputs (Use them EXACTLY as provided)**:\nTheme: \"{{ $('Take Idea').first().json.idea }}\"\nSetting: \"{{ $('Take Idea').first().json.environment_prompt }}\"\nSound: \"{{ $('Take Idea').first().json.sound_prompt }}\"\n\n**Format (Provide ONLY Scene descriptions)**:\nScene 1: \"A detailed visual prompt for the first scene.\"\nScene 2: \"A detailed visual prompt for the second scene.\"\nScene 3: \"A detailed visual prompt for the third scene.\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        580,
        -60
      ],
      "id": "8e4117fd-f6b1-4e41-b1fa-4ede06875a18",
      "name": "Prompts AI Agent"
    },
    {
      "parameters": {
        "jsonSchemaExample": "[\n  {\n    \"Caption\": \"Diver Removes Nets Off Whale üêã #whalerescue #marinelife #oceanrescue #seahelpers #love #nature #instagood #explore #viral #savenature #oceanguardians #cleanoceans\",\n    \"Idea\": \"Diver carefully cuts tangled net from distressed whale in open sea\",\n    \"Environment\": \"Open ocean, sunlight beams through water, diver and whale, cinematic realism\",\n    \"Sound\": \"Primary sound description under 15 words\",\n    \"Status\": \"for production\"\n  }\n]\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        200,
        140
      ],
      "id": "7e3afa5e-0864-449a-99a8-7b0179f5c272",
      "name": "Parser"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -60,
        -60
      ],
      "id": "02583187-6094-4f93-b1b3-78b9b97ebaca",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"Idea\": \"An obsidian rock being sliced with a shimmering knife\",\n  \"Environment\": \"Clean studio table, subtle light reflections\",\n  \"Sound\": \"Crisp slicing, deep grinding, and delicate crumbling\",\n  \"Scene 1\": \"Extreme macro shot: a razor-sharp, polished knife blade presses into the dark, granular surface of an obsidian rock, just beginning to indent.\",\n  \"Scene 2\": \"Close-up: fine, iridescent dust particles erupt from the point of contact as the blade cuts deeper into the obsidian, catching the studio light.\",\n  \"Scene 3\": \"Mid-shot: the knife, held perfectly steady, has formed a shallow, clean groove across the obsidian's shimmering surface, revealing a new, smooth texture.\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        640,
        140
      ],
      "id": "80ce849e-aa68-4984-bca7-13f4b174ff8a",
      "name": "Parser2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.wavespeed.ai/api/v3/bytedance/seedance-v1-pro-t2v-1080p",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"aspect_ratio\": \"9:16\",\n  \"duration\": 5,\n  \"prompt\": \"VIDEO THEME: {{ $('Prompts AI Agent').item.json.output.Idea }} | WHAT HAPPENS IN THE VIDEO: {{ $json.description }} | WHERE THE VIDEO IS SHOT: {{ $('Prompts AI Agent').item.json.output.Environment }}\"\n}\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 3000
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        200,
        340
      ],
      "id": "63f6abfe-2230-408e-9a51-5a3bd0667a1a",
      "name": "Create Clips",
      "credentials": {
        "httpHeaderAuth": {
          "id": "2utimBAtzlPOhXtv",
          "name": "Wave Speed AI"
        }
      }
    },
    {
      "parameters": {
        "amount": 240
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        440,
        340
      ],
      "id": "dbaa285f-b1ad-4679-9e0d-f5b65c0faf5c",
      "name": "Wait for Clips",
      "webhookId": "3ef8e370-50cf-489e-8775-bf502ce60a26"
    },
    {
      "parameters": {
        "url": "=https://api.wavespeed.ai/api/v3/predictions/{{ $json.data.id }}/result",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        660,
        340
      ],
      "id": "8d207166-9ef0-487e-ab9a-389c61c64e3b",
      "name": "Get Clips",
      "credentials": {
        "httpHeaderAuth": {
          "id": "2utimBAtzlPOhXtv",
          "name": "Wave Speed AI"
        }
      }
    },
    {
      "parameters": {
        "content": "## –î–ï–õ–ê–ï–ú –í–ò–î–ï–û",
        "height": 220,
        "width": 1040,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -120,
        300
      ],
      "id": "73313069-3777-4a52-ad69-8b6b3336e035",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "## –î–û–ë–ê–í–õ–Ø–ï–ú –ó–í–£–ö–ò\n",
        "height": 200,
        "width": 1040
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -120,
        540
      ],
      "id": "2316af5e-df87-45db-aefd-814964c22284",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "## –ì–ï–ù–ï–†–ò–†–£–ï–ú –¢–ï–ú–£ –ò –ü–†–û–ú–¢–´",
        "height": 380,
        "width": 1040,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -120,
        -120
      ],
      "id": "6fdadd41-a18b-4ba8-a25a-4b8210a400c3",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "content": "## –°–û–•–†–ê–ù–Ø–ï–ú –°–°–´–õ–ö–£\n",
        "height": 220,
        "width": 320,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        940,
        780
      ],
      "id": "edec6e2b-520b-4686-8302-fb350c1e9634",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "## –°–ö–õ–ï–ò–í–ê–ï–ú –í–°–ï –í–ú–ï–°–¢–ï",
        "height": 220,
        "width": 1040,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -120,
        780
      ],
      "id": "bab93222-5c7e-4c3d-be8b-28ae767f0809",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        360,
        140
      ],
      "id": "144a065e-947a-4f89-b766-b82829127d9a",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "o4lUnRBje7231oHG",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1a4vgtd8mTzyMqvS-3lRlDhK2z0R7dY39LR77ekhuLCw",
          "mode": "list",
          "cachedResultName": "Seedance",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1a4vgtd8mTzyMqvS-3lRlDhK2z0R7dY39LR77ekhuLCw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1d7lv3MyTihnACE9OyaSGop7jNDbgQo6_Ra75buikrMM/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "==ROW()-1",
            "idea": "={{ $json.output[0].Idea }}",
            "caption": "={{ $json.output[0].Caption }}",
            "production": "={{ $json.output[0].Status }}",
            "environment_prompt": "={{ $json.output[0].Environment }}",
            "sound_prompt": "={{ $json.output[0].Sound }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "idea",
              "displayName": "idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "production",
              "displayName": "production",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "environment_prompt",
              "displayName": "environment_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "sound_prompt",
              "displayName": "sound_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "final_output",
              "displayName": "final_output",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        400,
        -60
      ],
      "id": "3e0b7430-84c9-4072-8845-c10fe2fa0259",
      "name": "Take Idea",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "4n8SQ31DsdgttAqe",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Generate a high-concept idea for a large-scale, dramatic disaster or cataclysm affecting an entire Lego world.\n\n[[\nThe theme must be a visually interesting catastrophe. Focus on elemental or physical disasters. Be creative and think about situations that create chaos and drama for the Lego inhabitants.\n\nExamples for inspiration:\n- A great flood, but the water is thick, bubbling slime.\n- A sudden, world-freezing ice age that encases the city in ice.\n- A meteor shower, but the meteors are giant, bouncing gumballs.\n- A relentless, swirling sandstorm that slowly buries everything.\n- The ground cracking open to reveal rivers of lava.\n]]",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=**Role**: You are a concept artist specializing in viral Lego animations. Your task is to invent ONE large-scale, surreal event affecting an entire Lego world. The output must be a single-line JSON array.\n\n***\nRULES:\n- The **Idea** field must describe a simple, visually clear \"What If\" scenario for a Lego world.\n- The **Environment** field must describe the Lego world during the event, emphasizing its \"plastic\" and \"blocky\" nature.\n- **CRUCIAL: The \"Sound\" field must describe a simple, physical sound effect. NO human voices, screams, or complex music.**\n    - **Good examples (simple & physical):** \"The sound of rushing water and light plastic clicks\", \"The sound of wind and rattling Lego bricks\", \"The sound of bubbling, thick liquid\".\n    - **Bad examples (will be ignored):** \"dramatic screams\", \"sad music\", \"chaotic noise\".\n- The **Caption** must be a short, viral-style title.\n- **Status** must be \"for production\".\n\n***\nOUTPUT FORMAT (JSON):\n[{\"Caption\": \"...\", \"Idea\": \"...\", \"Environment\": \"...\", \"Sound\": \"...\", \"Status\": \"for production\"}]"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        100,
        -60
      ],
      "id": "a9590367-3c29-407e-aecc-ce12ddaeacef",
      "name": "Ideas Agent"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1a4vgtd8mTzyMqvS-3lRlDhK2z0R7dY39LR77ekhuLCw",
          "mode": "list",
          "cachedResultName": "Seedance",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1a4vgtd8mTzyMqvS-3lRlDhK2z0R7dY39LR77ekhuLCw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FgwtfdRV3WqRo_nrGOYjmV2zqvb2MY_oAxCDi3HgeZA/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "idea": "={{ $('Take Idea').first().json.idea }}",
            "production": "done",
            "final_output": "={{ $json.video_url }}"
          },
          "matchingColumns": [
            "idea"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "idea",
              "displayName": "idea",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "production",
              "displayName": "production",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "environment_prompt",
              "displayName": "environment_prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "final_output",
              "displayName": "final_output",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1040,
        840
      ],
      "id": "e21b04d7-a400-49fb-b3f6-b0e6e49d1098",
      "name": "Final Video",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "y1m29aVbGR5xNOzy",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Unbundle Prompts": {
      "main": [
        [
          {
            "node": "Create Clips",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Sounds": {
      "main": [
        [
          {
            "node": "Wait for Sounds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Sounds": {
      "main": [
        [
          {
            "node": "Get Sounds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Elements": {
      "main": [
        [
          {
            "node": "Sequence Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sequence Video": {
      "main": [
        [
          {
            "node": "Wait for Final Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Final Video": {
      "main": [
        [
          {
            "node": "Get Final Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Ideas Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Prompts AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Ideas Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Ideas Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompts AI Agent": {
      "main": [
        [
          {
            "node": "Unbundle Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Sounds": {
      "main": [
        [
          {
            "node": "List Elements",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Final Video": {
      "main": [
        [
          {
            "node": "Final Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "Prompts AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create Clips": {
      "main": [
        [
          {
            "node": "Wait for Clips",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Clips": {
      "main": [
        [
          {
            "node": "Get Clips",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Clips": {
      "main": [
        [
          {
            "node": "Create Sounds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "ai_languageModel": [
        [
          {
            "node": "Ideas Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Prompts AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Take Idea": {
      "main": [
        [
          {
            "node": "Prompts AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ideas Agent": {
      "main": [
        [
          {
            "node": "Take Idea",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "460ac61e-67b4-43ae-a790-e4c218adae7b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "13406947cefae7cf56d18dcd03d8103ca5c8c4a760df36f929c73a0b854bf8dc"
  },
  "id": "OZYY6ZJPsn632uCK",
  "tags": [
    {
      "createdAt": "2025-07-08T16:20:05.329Z",
      "updatedAt": "2025-07-08T16:20:05.329Z",
      "id": "GMMuJIRKcyfyn1XX",
      "name": "Video"
    }
  ]
}